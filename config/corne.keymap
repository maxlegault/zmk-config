/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    tapping-term-ms = <150>;
};

/ {
        behaviors {
                td0: tap_dance_0 {
                        compatible = "zmk,behavior-tap-dance";
                        #binding-cells = <0>;
                        //tapping-term-ms = <150>;
                        bindings = <&mo 3>, <&caps_word>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  F   |  P  |  B   |   |  J  |  L  |  I   |  Y  |  ;  |  -  |
// |  ESC |  A  |  R  |  S   |  T  |  G   |   |  M  |  J  |  E   |  I  |  O  |  '  |
// | SHFT |  Z  |  X  |  C   |  D  |  V   |   |  K  |  H  |  ,   |  .  |  /  |  \  |
//                    | CAPW | DEL | BSPC |   | SPC | RET | TAB  |
                        bindings = <
   &kp TAB   &kp Q       &kp W      &kp F      &kp P       &kp B          &kp J       &kp L      &kp U      &kp Y       &kp SEMI &kp MINUS
   &kp ESC   &mt LCTRL A &mt LALT R &mt LGUI S &mt LSHFT T &kp G          &mt RSHFT M &mt RGUI N &mt RALT E &mt RCTRL I &kp O    &kp SQT
   &kp GRAVE &kp Z       &kp X      &kp C      &kp D       &kp V          &kp K       &kp H      &kp COMMA  &kp DOT     &kp FSLH &kp BSLH
                                    &td0       &lt 2 DEL   &lt 1 BSPC     &lt 4 SPACE &kp RET    &kp TAB
                        >;
                };
                navigation_layer {
                        bindings = <
// -----------------------------------------------------------------------------------------
// |     |     |      |  UP  |      |     |   |     | PGU | PGD | HOM | END |    |
// |     |     | LEFT | DOWN | RGHT |     |   |  H  |  J  |  K  |  L  |     |    |
// |     |     |      |      |      |     |   |     |     |     |     |     |    |
//                    |      |      |     |   |     |     |     |
   &trans &trans &trans   &trans   &trans    &trans     &trans &kp PG_DN &kp PG_UP &kp HOME &kp END &trans
   &trans &trans &kp LEFT &kp DOWN &kp RIGHT &trans     &kp H  &kp J     &kp K     &kp L    &trans  &trans
   &trans &trans &trans   &trans   &trans    &trans     &trans &trans    &trans    &trans   &trans  &trans
                          &trans   &trans    &trans     &trans &trans    &trans
                        >;
                };
                number_layer {
                        bindings = <
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |     |   |     |  7  |  8  |  9  |     |    |
// |     |     |     |     |     |     |   |     |  4  |  5  |  6  |     |    |
// |     |     |     |     |     |     |   |     |  1  |  2  |  3  |     |    |
//                   |     |     |     |   |  0  |     |     |
   &trans &trans &trans &trans &trans &trans     &trans &kp 7  &kp 8  &kp 9 &trans &trans
   &trans &trans &trans &trans &trans &trans     &trans &kp 4  &kp 5  &kp 6 &trans &trans
   &trans &trans &trans &trans &trans &trans     &trans &kp 1  &kp 2  &kp 3 &trans &trans
                        &trans &trans &trans     &kp 0  &trans &trans
                        >;
                };
                function_layer {
                        bindings = <
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |     |   | PREV |  F7  |  F8  | F9 | F10 |    |
// |     |     |     |     |     |     |   | NEXT |  F4  |  F5  | F6 | F11 |    |
// |     |     |     |     |     |     |   | MUTE |  F1  |  F2  | F3 | F12 |    |
//                   |     |     |     |   | >/|| | V_DN | V_UP |
   &trans &trans &trans &trans &trans &trans     &kp C_PREV       &kp F7       &kp F8       &kp F9 &kp F10 &trans
   &trans &trans &trans &trans &trans &trans     &kp C_NEXT       &kp F4       &kp F5       &kp F6 &kp F11 &trans
   &trans &trans &trans &trans &trans &trans     &kp C_MUTE       &kp F1       &kp F2       &kp F3 &kp F12 &trans
                        &trans &trans &trans     &kp C_PLAY_PAUSE &kp C_VOL_DN &kp C_VOL_UP
                        >;
                };
                symbol_layer {
                        bindings = <
// -----------------------------------------------------------------------------------------
// |  #  |  (  |  )  |  [  |  ]  |  &  |   |     |     |     |     |     |     |
// |  !  |  ^  |  =  |  _  |  $  |  ?  |   |     |     |     |     |     |     |
// |  ~  |  <  |  |  |  -  |  >  |  *  |   |     |     |     |     |     |     |
//                   |  %  |  :  |  @  |   |     |     |     |
   &kp HASH  &kp LPAR  &kp RPAR  &kp LBKT  &kp RBKT  &AMPS      &trans &trans &trans &trans &trans &trans
   &kp EXCL  &kp CARET &kp EQUAL &kp UNDER &kp DLLR  &QMARK     &trans &trans &trans &trans &trans &trans
   &kp TILDE &kp LT    &kp PIPE  &kp MINUS &kp GT    &STAR      &trans &trans &trans &trans &trans &trans
                                 &kp PRCNT &kp COLON &kp AT     &trans &trans &trans
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                                        &trans       &trans       &trans         &trans   &trans   &trans
                        >;
                };
        };
};
